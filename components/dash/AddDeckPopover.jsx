import React, { useImperativeHandle, useState, forwardRef, useEffect } from 'react';
import { useAtom, atom, useSetAtom } from 'jotai';
import { factionSelected, deckList } from './Cards';
import { useForm } from 'react-hook-form';
import { deckMenuStatus } from './Cards';


const AddDeckPopover = (props, ref) => {

    const { register, handleSubmit, errors, reset } = useForm();

    const [faction, setFaction] = useAtom(factionSelected);
    const [decks, setDecks] = useAtom(deckList);
    const [, setDMenuStatus] = useAtom(deckMenuStatus);

    const [menuState, setMenuState] = useState(false);

    useEffect(() => {
        const listener = event => {
            if (event.code === "Enter" || event.code === "NumpadEnter") {
              handleSubmit(addDeck);
            }
          };
          document.addEventListener("keydown", listener);
          console.log(decks);
          return () => {
            document.removeEventListener("keydown", listener);
          };
    }, []);

    useImperativeHandle(ref, () => ({
        toggleMenu: () => {
            setMenuState(!menuState);
            setFaction(null);
        },
        close: () => {
            setMenuState(false);
        }
    }));

    if (!menuState) {
        return null;
    }

    const addDeck = (data) => {
        const deckData = {
            name: data.deckname,
            faction: faction,
            cards: [],
        };
        setDecks(decks => [...decks, deckData]);
        setMenuState(false);
        setDMenuStatus(false);
        reset();
        setFaction(null);
    }

   

    return (
        <div className='deck-menu2' ref={ref}>
            <div className='faction-row'>
                <div className='faction-title'>
                    Faction
                </div>
                <div className='faction-icon-container'>
                    <div onClick={() => setFaction('faction1')} className={faction=='faction1' ? 'factions2' : 'factions'}>
                        <svg width="22" height="22.4" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M2.23654 12.266C2.35403 9.15113 3.93261 6.27821 6.81838 4.37977C6.8269 4.38297 6.90166 4.35574 6.86751 4.42038C6.63891 4.63233 2.52917 9.4871 6.31207 13.3191C6.31207 13.3191 8.29964 15.2299 9.84088 13.4168C9.84088 13.4168 11.3617 11.448 9.82164 8.46336C9.82164 8.46336 9.43182 7.48881 8.02731 6.88431L9.15843 5.6363C9.15843 5.6363 10.1143 6.04642 10.8544 7.15877C10.8544 7.15877 10.8939 5.98764 9.99678 4.7397L11.7505 2.75L13.4866 4.721C13.4866 4.721 12.6882 5.85205 12.6295 7.17747C12.6295 7.17747 13.1747 6.28034 14.3453 5.63637L15.456 6.88437C15.456 6.88437 14.388 7.23632 13.6724 8.45064C13.0572 9.57577 12.5836 11.982 13.7001 13.458C13.7001 13.458 14.9497 15.2299 17.1478 13.3535C17.1478 13.3535 21.1892 9.73227 16.7333 4.4968C16.7333 4.4968 16.4898 4.28159 16.7632 4.39854C18.7327 5.83241 21.0909 7.72332 21.3344 12.4424C21.2383 18.1649 17.4061 22.25 11.8103 22.25C6.33137 22.25 2.07212 17.6778 2.23654 12.266Z" fill={faction=='faction1' ? '#C53030' :"#757575"} />
                        </svg>
                    </div>
                    <div onClick={() => setFaction('faction2')} className={faction=='faction2' ? 'factions2' : 'factions'}>
                        <svg width="22" height="22.4" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path fillRule="evenodd" clipRule="evenodd" d="M11.6927 15.6786C11.4996 15.3968 10.4694 13.8933 10.4694 13.8933L11.2545 16.0526L8.82057 16.4059L11.2545 16.7593L10.3123 18.6044C10.3123 18.6044 11.4878 17.3687 11.6539 17.194C11.5855 19.8696 11.5686 20.5281 11.5686 20.5281C11.5686 20.5281 5.56213 17.7407 8.89908 11.577C8.89908 11.577 4.73769 6.9837 8.50648 4.15706C8.50648 4.15706 2.06812 8.04367 6.151 14.7177C6.151 14.7177 2.77478 11.42 4.54139 8.08291C4.54139 8.08291 1.47926 12.4015 5.20878 17.1519C5.20878 17.1519 4.18809 16.5237 3.28516 14.1289C3.28516 14.1289 3.9438 21.2581 11.92 21.3516C11.92 21.3526 11.92 21.3526 11.92 21.3526C11.9466 21.3526 11.9731 21.3524 11.9995 21.3523C12.0259 21.3525 12.0524 21.3526 12.079 21.3526C12.079 21.3526 12.079 21.3526 12.079 21.3516C20.0552 21.2581 20.7138 14.1289 20.7138 14.1289C19.8109 16.5237 18.7902 17.1519 18.7902 17.1519C22.5197 12.4015 19.4576 8.08291 19.4576 8.08291C21.2242 11.42 17.848 14.7177 17.848 14.7177C21.9308 8.04367 15.4925 4.15706 15.4925 4.15706C19.2613 6.9837 15.0999 11.577 15.0999 11.577C18.4368 17.7407 12.4303 20.5281 12.4303 20.5281C12.4303 20.5281 12.4135 19.8696 12.345 17.194C12.5111 17.3687 13.6866 18.6044 13.6866 18.6044L12.7444 16.7593L15.1784 16.4059L12.7444 16.0526L13.5295 13.8933C13.5295 13.8933 12.4994 15.3968 12.3063 15.6786C12.2188 12.261 12.0019 3.78118 12.0009 3.74116C12.0005 3.64712 12.0005 3.64661 12.0005 3.64661C12.0005 3.64661 12.0005 3.64669 11.9995 3.68569C11.9985 3.6467 11.9985 3.64661 11.9985 3.64661C11.9985 3.64661 11.9985 3.64712 11.998 3.74116C11.9963 3.80804 11.7799 12.2687 11.6927 15.6786" fill={faction=='faction2' ? '#276749' :"#757575"} />
                            <path d="M12.0001 1.25C5.78683 1.25 0.75 6.28673 0.75 12.5C0.75 18.7132 5.78683 23.75 12.0001 23.75C18.2133 23.75 23.25 18.7132 23.25 12.5C23.25 6.28673 18.2133 1.25 12.0001 1.25V1.25Z" stroke="#276749" strokeWidth="0.00535718" strokeMiterlimit="10" />
                            <path fillRule="evenodd" clipRule="evenodd" d="M12.0001 1.25C5.78692 1.25 0.75 6.28684 0.75 12.5C0.75 18.7131 5.78692 23.75 12.0001 23.75C18.2132 23.75 23.25 18.7131 23.25 12.5C23.25 6.28684 18.2132 1.25 12.0001 1.25ZM12.0001 2.59775C17.4688 2.59775 21.9023 7.03122 21.9023 12.5C21.9023 17.9687 17.4688 22.4022 12.0001 22.4022C6.5313 22.4022 2.09784 17.9687 2.09784 12.5C2.09784 7.03122 6.5313 2.59775 12.0001 2.59775Z" fill={faction=='faction2' ? '#276749' : '#757575'} />
                        </svg>
                    </div>
                    <div onClick={() => setFaction('faction3')} className={faction=='faction3' ? 'factions2' : 'factions'}>
                        <svg width="22" height="22.4" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12 1.87405C17.8655 1.87406 22.6259 6.63448 22.6259 12.5C22.6259 18.3655 17.8655 23.126 12 23.126C6.13445 23.126 1.37402 18.3655 1.37402 12.5C1.37402 6.63448 6.13445 1.87405 12 1.87405Z" stroke="#3B3B3B" strokeWidth="0.732824" />
                            <path d="M13.224 3.20688V4.2981C14.5971 4.50116 15.8607 5.03882 16.9282 5.82902L17.6988 5.05955C16.4248 4.08188 14.8935 3.42471 13.224 3.20688ZM10.7701 3.21031C9.10161 3.4294 7.57182 4.08794 6.29877 5.06528L7.0648 5.83474H7.06824C8.13512 5.04403 9.3975 4.50234 10.7701 4.2981V3.21031ZM11.3129 5.43398V9.10726C10.8679 9.1971 10.452 9.37046 10.0866 9.61337L7.48847 7.01642L6.51633 7.98856L9.11671 10.5889C8.87446 10.9539 8.69799 11.3688 8.60831 11.813H4.93389V13.187H8.60831C8.69797 13.631 8.87462 14.0429 9.11671 14.4076L6.51633 17.0092L7.48847 17.9813L10.0866 15.3832C10.452 15.6261 10.8679 15.8018 11.3129 15.8916V19.566H12.6869V15.8916C13.1324 15.8017 13.5453 15.623 13.911 15.3798L16.5114 17.9813L17.4835 17.0092L14.8831 14.4076C15.1251 14.0429 15.303 13.6309 15.3927 13.187H19.0659V11.813H15.3927C15.303 11.3689 15.1253 10.9538 14.8831 10.5889L17.4835 7.98856L16.5114 7.01642L13.911 9.6168C13.5453 9.37354 13.1324 9.19718 12.6869 9.10726V5.43398H11.3129ZM19.4347 6.79543L18.6652 7.56489C19.4574 8.6328 19.9976 9.89926 20.2018 11.2737H21.293C21.074 9.60321 20.4143 8.06958 19.4347 6.79543ZM4.56175 6.80115C3.58412 8.07408 2.92564 9.60511 2.70679 11.2737H3.79915C4.00312 9.90149 4.54185 8.63859 5.33236 7.57176L4.56175 6.80115ZM2.70679 13.7263C2.92502 15.3947 3.58238 16.9256 4.55946 18.1989L5.32892 17.4283C4.5393 16.3616 4.00255 15.0983 3.79915 13.7263H2.70679ZM20.2018 13.7263C19.9975 15.0999 19.4571 16.3637 18.6652 17.4317L19.4347 18.2012C20.4133 16.9274 21.0737 15.3958 21.293 13.7263H20.2018ZM7.0648 19.1653L6.29534 19.9347C7.56872 20.9138 9.10085 21.5737 10.7701 21.7931V20.7008C9.3969 20.4962 8.13193 19.9569 7.0648 19.1653ZM16.9282 19.1676C15.8603 19.9585 14.5977 20.5009 13.224 20.7042V21.7931C14.8936 21.5751 16.4248 20.9158 17.6988 19.9382L16.9316 19.1676H16.9282Z" fill={faction=='faction3' ? '#3B3B3B' : '#757575'} />
                        </svg>
                    </div>
                    <div onClick={() => setFaction('faction4')} className={faction=='faction4' ? 'factions2' : 'factions'}>
                        <svg width="22" height="22.4" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M12.5 22C17.4706 22 21.5 17.9706 21.5 13C21.5 8.02944 17.4706 4 12.5 4C7.52944 4 3.5 8.02944 3.5 13C3.5 17.9706 7.52944 22 12.5 22Z" stroke="#757575" strokeMiterlimit="10" strokeLinecap="square" />
                            <path d="M22.5 3L2.5 23" stroke="#3B3B3B" strokeMiterlimit="10" strokeLinecap="square" />
                        </svg>
                    </div>
                </div>
            </div>
            <form onSubmit={handleSubmit(addDeck)}>
            <div className='input-container'>
                <input {...register('deckname', {required: true})} className='input' type="text" placeholder='' />
                <label className='label' htmlFor="">Enter Deck Name</label>
            </div>
            </form>
        </div>
    )
}

export default forwardRef(AddDeckPopover);